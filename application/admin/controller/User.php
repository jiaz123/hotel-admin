<?php

namespace app\admin\controller;


use think\Controller;
use think\Db;
use think\Validate;

class User extends Controller{
    //验证token
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        checkToken();
    }

    //编辑密码
    /*
     * 1. 验证旧密码和新密码是否符合规范
     * 2. 通过token解析除用户id，
     * 3. 查出旧密码是否正确
     * 4. 修改密码
     * */
    public function edit(){
checkToken();
        if(!$this->request->isPost()){
            return json([
                'code'=>404,
                'msg'=>'请求方式不正确'
            ]);
        }

        $data = $this->request->post();
        $validate = Validate('User');
        if(!$validate->check($data)){
            return json([
                'code'=>404,
                'msg'=>$validate->getError(),
            ]);
        }
        if(strcmp($data['oldpassword'],$data['newpassword'])==0){
            return json([
                'code'=>404,
                'msg'=>'新旧密码不能一样',
            ]);
        }


        $id = request()->id;
        $user = Db::table('admin')->where('id',$id)->find();
        $oldpassword = md5(crypt($data['oldpassword'],config('salt')));

        if(strcmp($oldpassword,$user['password'])!=0){
            return json([
                'code'=>404,
                'msg'=>'旧密码输入不正确',
            ]);
        }


        $newpassword = md5(crypt($data['newpassword'],config('salt')));

        $result = Db::table('admin')->where('id',$id)->update(['password'=>$newpassword]);

        if($result){
            return json([
                'code'=>200,
                'msg'=>'修改密码成功',
                'data'=>$result
            ]);
        }else{
            return json([
                'code'=>404,
                'msg'=>'修改密码失败',
            ]);
        }





    }
}